// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalNotesAPI.Data;

namespace PersonalNotesAPI.Migrations
{
    [DbContext(typeof(NoteDBContext))]
    [Migration("20190626101316_AddRecord")]
    partial class AddRecord
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonalNotesAPI.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("Finished");

                    b.Property<int>("NotebookId");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Note");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Truc",
                            CreatedOn = new DateTime(2019, 6, 26, 17, 13, 16, 800, DateTimeKind.Local).AddTicks(6869),
                            Deleted = false,
                            Description = "Description note 01",
                            Finished = false,
                            NotebookId = 1,
                            Title = "Note01",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Truc",
                            CreatedOn = new DateTime(2019, 6, 26, 17, 13, 16, 800, DateTimeKind.Local).AddTicks(9258),
                            Deleted = false,
                            Description = "Description note 02",
                            Finished = false,
                            NotebookId = 1,
                            Title = "Note02",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Truc",
                            CreatedOn = new DateTime(2019, 6, 26, 17, 13, 16, 800, DateTimeKind.Local).AddTicks(9278),
                            Deleted = false,
                            Description = "Description note 03",
                            Finished = false,
                            NotebookId = 2,
                            Title = "Note03",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("PersonalNotesAPI.Models.Notebook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Notebook");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Truc",
                            CreatedOn = new DateTime(2019, 6, 26, 17, 13, 16, 799, DateTimeKind.Local).AddTicks(4989),
                            Deleted = false,
                            Name = "Notebook01",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Truc",
                            CreatedOn = new DateTime(2019, 6, 26, 17, 13, 16, 800, DateTimeKind.Local).AddTicks(2907),
                            Deleted = false,
                            Name = "Notebook02",
                            UpdatedBy = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
